version: 0.2
phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - cd blacklist
      - pip install pipenv
      - docker pull postgres:10.6-alpine
  pre_build:
    commands:
      - pipenv install --dev
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - docker run --rm --name postgres -p 5432:5432 -e POSTGRES_PASSWORD=postgres -d postgres:10.6-alpine
  build:
    commands:
      - echo "logs..."
      - docker logs postgres
      - echo "Running tests..."
      - pipenv run pytest --cov=src -v -s --cov-fail-under=70
      - echo "Building the Docker image..."
      - docker build -t blacklist .
      - echo "Tagging the Docker image..."
      - docker tag blacklist:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/blacklist:latest
  post_build:
    commands:
      - echo Stopping postgres container
      - docker container stop postgres
      - echo "Pushing the Docker image to ECR..."
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/blacklist:latest
artifacts:
  files:
    - '**/*'